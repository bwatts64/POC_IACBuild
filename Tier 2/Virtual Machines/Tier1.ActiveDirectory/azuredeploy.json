{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile": "2018-03-01-hybrid",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs"
      },
      "defaultValue": "vmadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs. Default value is subscription id"
      },
      "defaultValue": "[concat('Subscription#',substring(resourcegroup().id,15,36))]"
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        3,
        4,
        5
      ],
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "pocusedc-",
      "metadata": {
        "description": "VM name prefix"
      }
    },
    "osImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Maps to the publisher in the Azure Stack Platform Image Repository manifest file."
      }
    },
    "osImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Maps to the Offer in the Azure Stack Platform Image Repository manifest file."
      }
    },
    "osImageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "subnetid": {
      "type": "string"
    },
    "asid": {
      "type":  "string"
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "VMSize": "Standard_A1",
    "dnsPrefix": "[tolower(concat('vmdns', resourceGroup().name))]",
    "windowsImageVersion": "latest",
    "dataDiskSize": 2,

    "addressPrefix": "10.0.0.0/16",
    "virtualNetworkName": "[tolower(concat('vNet-',resourceGroup().name))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",

    "NICPrefix": "vnic-",
    "storageName": "[concat('sa', uniquestring(resourceGroup().id))]",

    "publicLBName": "[tolower(concat('external-lb-', resourceGroup().name))]",
    "publiclbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "lbFE": "[tolower(concat('external-lb-fe-',resourceGroup().name))]",
    "publiclbFEConfigID": "[concat(variables('publiclbID'),'/frontendIPConfigurations/',variables('lbFE'))]",

    "publicIPAddressName": "[tolower(concat('public-ip',resourceGroup().name))]",
    "rdpPort": 3389,
    "nsgName": "[tolower(concat('vmnsg',resourceGroup().name))]",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "vmContainerName": "vhds"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "rule1",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('NICPrefix'), parameters('vmNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetid')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NICPrefix'), parameters('vmNamePrefix'), copyIndex()))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[parameters('asid')]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('osImagePublisher')]",
            "offer": "[parameters('osImageOffer')]",
            "sku": "[parameters('osImageSKU')]",
            "version": "[variables('windowsImageVersion')]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NICPrefix'), parameters('vmNamePrefix'), copyIndex()))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    
  }
}